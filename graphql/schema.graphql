type Query{

  # User Queries

  user(id:ID!): User @field(resolver: "App\\GraphQL\\Queries\\UserQuery@user")
 
  users: [User!]! @field(resolver: "App\\GraphQL\\Queries\\UserQuery@users")

  # Post Queries

  posts: [Post!]! @field(resolver: "App\\GraphQL\\Queries\\PostQuery@posts")

  post(id:ID!): Post @field(resolver: "App\\GraphQL\\Queries\\PostQuery@post")

}

type Mutation{

  # User Mutations

  createUser(name: String!, email: String!, password: String!): User @field(resolver: "App\\GraphQL\\Mutations\\UserMutation@createUser")

  updateUser(id: ID!, name: String, email: String, password: String): User @field(resolver: "App\\GraphQL\\Mutations\\UserMutation@updateUser")

  deleteUser(id: ID!): User @field(resolver: "App\\GraphQL\\Mutations\\UserMutation@deleteUser")

  # Post Mutations

  createPost(title: String!, content: String!, user_id: ID!): Post @field(resolver: "App\\GraphQL\\Mutations\\PostMutation@createPost")

  updatePost(id: ID!, title: String, content: String): Post @field(resolver: "App\\GraphQL\\Mutations\\PostMutation@updatePost")

  deletePost(id: ID!): Post @field(resolver: "App\\GraphQL\\Mutations\\PostMutation@deletePost")

}

# User type

type User{

  id: ID
  name: String
  email: String

}

# Post type

type Post{

  id: ID
  title: String
  content: String
  user_id: ID

}